plugins {
    id 'java-library'
    id 'groovy'
    id 'maven-publish'
    id 'org.jreleaser' version '1.14.0'
}

allprojects {
    group = 'dk.fust.docgen'
    version = '0.0.6'

    plugins.withType(JavaPlugin).whenPluginAdded {
        tasks.withType(Test).configureEach {
            // Using JUnitPlatform for running tests
            useJUnitPlatform()

        }
        java {
            withSourcesJar()
            withJavadocJar()
        }
    }

    plugins.withType(MavenPublishPlugin).whenPluginAdded {
        publishing {
            publications {
                maven(MavenPublication) {
                    groupId = group
                    artifactId = project.name
                    version = version

                    from components.java

                    pom {
                        name = 'Documentation Generator'
                        url = 'https://github.com/patrickfust/documentation-generator'
                        licenses {
                            license {
                                name = 'The Apache License, Version 2.0'
                                url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                            }
                        }
                        developers {
                            developer {
                                id = 'patrickfust'
                                name = 'Patrick Fust'
                                email = 'patrick.fust@gmail.com'
                            }
                        }
                        scm {
                            connection = 'scm:git:git://github.com/patrickfust/documentation-generator.git'
                            developerConnection = 'scm:git:git://github.com/patrickfust/documentation-generator.git'
                            url = 'https://github.com/patrickfust/documentation-generator'
                        }
                    }
                }
            }
        }
    }

    repositories {
        mavenLocal()
        mavenCentral()
    }

}

jreleaser {
    configFile = 'jreleaser.yml'
}

task installMavenPlugin(type: Exec) {
    workingDir rootProject.getProjectDir().getAbsolutePath() + "/documentation-generator-maven-plugin"
    commandLine "mvn", "install"
}

task createMavenPlugingStagingDir(type: Exec) {
    commandLine "mkdir", "-p", 'build/staging-deploy/dk/fust/docgen/documentation-generator-maven-plugin'
}

task copyMavenPluginToStagingDir(type: Exec) {
    commandLine "cp", "-rf", "${System.properties['user.home']}/.m2/repository/dk/fust/docgen/documentation-generator-maven-plugin/${version}", 'build/staging-deploy/dk/fust/docgen/documentation-generator-maven-plugin'
}

publish.dependsOn('copyMavenPluginToStagingDir')
copyMavenPluginToStagingDir.dependsOn('createMavenPlugingStagingDir')
createMavenPlugingStagingDir.dependsOn('installMavenPlugin')
